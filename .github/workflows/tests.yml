name: Tests

on:
  push:
    branches: [ 'master', 'ci' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  stack:
    name: Stack
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        stack: ["latest"]
        resolver:
          - "nightly"
          - "lts-24"
          - "lts-23"
          - "lts-22"
          - "lts-21"
          - "lts-20"

    steps:
      - name: Clone project
        uses: actions/checkout@v4

      # Not sure how to have GHC not setup twice
      # Something with settings "ghc-version"?
      # ["9.10", "9.8", "9.6", "9.4", "9.2"]
      - uses: haskell-actions/setup@v2
        name: Setup Haskell Stack
        with:
          stack-version: ${{ matrix.stack }}
          enable-stack: true

      # We need separate caching steps, because of path names
      - name: Cache dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v4
        with: &cache-key
          path: "%APPDIR%\\stack"
          key: ${{ runner.os }}-${{ matrix.resolver }}-${{ hashFiles('stack.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.resolver }}-

      - name: Cache dependencies (Linux / MacOS)
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/cache@v4
        with:
          path: "~/.stack"
          <<: *cache-key

      - name: Build and run tests
        shell: bash
        run: |
            set -ex
            EXTRA=""
            BENCH="--bench"
            STACKYAML="stack.yaml"
            case "${{ matrix.resolver }}" in
              "nightly")
                STACKYAML="stack-nightly.yaml" ;;
              "lts-22")
                STACKYAML="stack-lts-22.yaml" ;;
              "lts-21")
                STACKYAML="stack-lts-21.yaml" ;;
              "lts-20")
                STACKYAML="stack-lts-20.yaml" ;;
              *)
                ;;
            esac
            if [[ ${{ matrix.os }} = "windows-latest" ]]; then
              EXTRA="--no-run-tests"
            elif [[ ${{ matrix.os }} = "macos-latest" ]]; then
              BENCH=""
            fi
            stack test --no-terminal --resolver ${{ matrix.resolver }} --haddock --no-haddock-deps $BENCH --no-run-benchmarks $EXTRA --stack-yaml $STACKYAML
